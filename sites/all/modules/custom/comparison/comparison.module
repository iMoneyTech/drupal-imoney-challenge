<?php

/**
 * @file
 * Allows users to compare different mobile plan.
 */

/**
 * Implements hook_theme().
 */
function comparison_theme(){
  return array(
    'comparison_plans' => array(
      'variables' => array(),
      'template' => 'comparison-plans',
    ),
    'comparison_plans_simple' => array(
      'variables' => array(),
      'template' => 'comparison-plans-simple',
    ),
    'comparison_plans_advanced' => array(
      'variables' => array(),
      'template' => 'comparison-plans-advanced',
    ),
    'comparison_plans_list' => array(
      'template' => 'theme/comparison-plan-list',
      'parameters' => array(
          'query' => array(),
      ),
    )
  );
}

/**
 * Implements hook_menu().
 */
function comparison_menu() {
  $items['comparison/mobile'] = array(
    'title' => 'Compare Mobile Phone Plans',
    'description' => "Compare Mobile Phone Plans.",
    'page callback' => 'comparison_compare',
    'access callback' => TRUE, // For demo purpose; otherwise array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['comparison/mobile/simple'] = array(
    'title' => 'Compare Mobile Phone Plans',
    'description' => "Compare Mobile Phone Plans Simple.",
    'page callback' => 'comparison_compare_plans_simple',
    'access callback' => TRUE, // For demo purpose; otherwise array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['comparison/mobile/advanced'] = array(
    'title' => 'Compare Mobile Phone Plans',
    'description' => "Compare Mobile Phone Plans Advanced.",
    'page callback' => 'comparison_compare_plans_advanced',
    'access callback' => TRUE, // For demo purpose; otherwise array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['comparison/mobile/list'] = array(
    'title' => t('Mobile Plan List'),
    'page callback' => 'comparison_mobile_plans_list',
    'access callback' => TRUE,//For demo purpose; otherwise array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['load/plan/mobile'] = array(
    'title' => 'Load mobile plans',
    'description' => "Load mobile plans from xml.",
    'page callback' => 'load_mobile_plans',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * It displays the comparison table along with the filtering feature.
 * It calls ajax to load nodes according to the content type.
 * 
 * @return string HTML
 */
function comparison_compare(){
  angularjs_init_application('planlistAjax');
  drupal_add_js(drupal_get_path('module', 'comparison') . '/js/planlist.js');
    
  return theme('comparison_plans');
}

/**
 * Renders filtering form
 * 
 * @return form HTML
 */
function comparison_mobile_plans_list(){
  return drupal_get_form('comparison_plans_list_form');
}

/**
 * implemented hook_form
 * 
 * @param type $form
 * @param type $form_state
 * @return string 
 */
function comparison_plans_list_form($form, &$form_state) {
  $options = node_type_get_names();

  $form['node_type'] = array(
    '#type' => 'ng_select',
    '#title' => t('Content type'),
    '#options' => $options,
    '#description' => t('Filter by content-type.'),
    '#default_value' => key($options),
    // Define the ng-model and controller.
    '#ng_model' => 'nodeType',
    '#ng_controller' => 'ListCtrl',
    // Add ng-change.
    '#attributes' => array(
      'ng-change' => 'filterNodeType()',
    ),
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#attributes' => array(
      'ng-model' => 'query.title',
      'placeholder' => t('Filter by title'),
      // HTML5 attribute to Prevent from autocomplete to hide our table.
      'autocomplete' => 'off',
    ),
    '#ng_controller' => 'ListCtrl',
  );

  $header = array(
    t('Title'),
    t('Author'),
  );

  $row = array(
    '{{node.title}}',
    '{{node.author.id}}',
  );

  $form['table'] = array(
    '#theme' => 'ng_table',
    '#header' => $header,
    '#row' => $row,
    '#empty' => t('No content found.'),
    // Optionally filter query.
    '#ng_repeat' => 'node in nodes.list | filter: query',
    // Used for the empty text.
    '#ng_model' => 'nodes.list',
    // Empty text logic.
    '#ng_empty' => '(nodes.list | filter: query).length == 0',
  );

  return $form;
}

/**
 * Page callback to display simple list of mobile plans along with 2 filters.
 * 1st filter is simple name filter
 * other is device name filter of nested list of phone.
 * 
 * @return HTML
 */
function comparison_compare_plans_simple(){
  angularjs_init_application('planList');
  drupal_add_js(drupal_get_path('module', 'comparison') . '/js/planlist.js');
  $mobile_plans = node_load_multiple(array(), array('type' => 'mobile_plan'));
  $mobile_plans_json = comparison_make_simple_json($mobile_plans);
  
  drupal_add_js(array('comparison' => array('plans' => $mobile_plans_json)), 'setting');
  return theme('comparison_plans_simple');
}

/**
 * List of plans with drag n drop feature which will give the real facility to compare plans side by side.
 * User will be able to filter the list and drag the desired plan to the list of side by side block.
 * 
 * @return HTML 
 */
function comparison_compare_plans_advanced(){
  angularjs_init_application('planList');
  drupal_add_js(drupal_get_path('module', 'comparison') . '/js/planlist_dnd.js');
  drupal_add_css(drupal_get_path('module', 'comparison') . '/css/dnd.css');
  $mobile_plans = node_load_multiple(array(), array('type' => 'mobile_plan'));
  $mobile_plans_json = comparison_make_simple_json($mobile_plans);
  
  drupal_add_js(array('comparison' => array('plans' => $mobile_plans_json)), 'setting');
  return theme('comparison_plans_advanced');
}

/**
 * Transform a node(mobile_plan) object into simple json.
 * Field collection items are incorporated as nested array of json.
 * 
 * @param object $mobile_plans
 * @return type 
 */
function comparison_make_simple_json($mobile_plans){
  
  $mobile_plans_array = array();
  $i = 0;
  foreach($mobile_plans as $mobile_plan){
   
    $mobile_plan_array['name'] = $mobile_plan->title;
    $mobile_plan_array['field_free_call'] = $mobile_plan->field_free_call[LANGUAGE_NONE][0]['value'];
    $mobile_plan_array['field_free_data'] = $mobile_plan->field_free_data[LANGUAGE_NONE][0]['value'];
    $mobile_plan_array['field_free_sms'] = $mobile_plan->field_free_sms[LANGUAGE_NONE][0]['value'];
    $mobile_plan_array['field_monthly_payment'] = $mobile_plan->field_monthly_payment[LANGUAGE_NONE][0]['value'];
    $mobile_plan_array['field_plan_image'] = $mobile_plan->field_plan_image[LANGUAGE_NONE][0]['value'];
    $mobile_plan_array['field_plan_image_alter'] = $mobile_plan->field_plan_image_alter[LANGUAGE_NONE][0]['value'];
    $mobile_plan_array['field_id'] = $mobile_plan->field_id[LANGUAGE_NONE][0]['value'];

    $mobile_plan_array['mobile_plan_phone_array'] = array();
    foreach($mobile_plan->field_phone[LANGUAGE_NONE] as $field_phone){
      $mobile_plan_phone_collection = entity_metadata_wrapper("field_collection_item", $field_phone["value"]);
      
      $mobile_plan_phone_array['field_contract_period'] = $mobile_plan_phone_collection->field_contract_period->value();
      $mobile_plan_phone_array['field_mobile_capacity'] = $mobile_plan_phone_collection->field_mobile_capacity->value();
      $mobile_plan_phone_array['field_mobile_device'] = $mobile_plan_phone_collection->field_mobile_device->value();
      $mobile_plan_phone_array['field_sell_price'] = $mobile_plan_phone_collection->field_sell_price->value();
      $mobile_plan_phone_array['field_telco_name'] = $mobile_plan_phone_collection->field_telco_name->value();
      
      $mobile_plan_array['mobile_plan_phone_array'][] = $mobile_plan_phone_array;
    }
    $mobile_plans_array[] = $mobile_plan_array;
  }
  
  return json_encode($mobile_plans_array);
}

/**
 * Creates node objects and saves in DB.
 * 
 * @param object $mobile_plan
 * @return boolean 
 */
function comparison_save_plan($mobile_plan){
  $node = new stdClass(); // Create a new node object
  $node->type = "mobile_plan"; 
  node_object_prepare($node); // Set some default values
  
  $node->title    = $mobile_plan->planName;
  $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled

  $node->uid = 1; // UID of the author of the node; 
  $node->status = 1;
  $node->path = $mobile_plan->path;
  
  $node->field_free_call[LANGUAGE_NONE][0]['value'] = $mobile_plan->freeCall;
  $node->field_free_data[LANGUAGE_NONE][0]['value'] = $mobile_plan->freeData;
  $node->field_free_sms[LANGUAGE_NONE][0]['value'] = $mobile_plan->freeSMS;
  $node->field_monthly_payment[LANGUAGE_NONE][0]['value'] = $mobile_plan->monthlyPayment;
  $node->field_plan_image[LANGUAGE_NONE][0]['value'] = $mobile_plan->planImage;
  $node->field_plan_image_alter[LANGUAGE_NONE][0]['value'] = $mobile_plan->planImageAlt;
  $node->field_type[LANGUAGE_NONE][0]['value'] = $mobile_plan->planType;
  $node->field_id[LANGUAGE_NONE][0]['value'] = $mobile_plan->nid;
  
  if($node = node_submit($node)) { // Prepare node for saving
      node_save($node);
      echo "Node with nid " . $node->nid . " saved!\n";
      // Create and save field collection for node
      $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_phone'));
      $field_collection_item->setHostEntity('node', $node);
      $field_collection_item->field_contract_period[LANGUAGE_NONE][0]['value']
            = $mobile_plan->phone->mobilePlan->contractPeriod;
      $field_collection_item->field_mobile_capacity[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->mobileCapacity;
      $field_collection_item->field_mobile_device[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->mobileDevice;
      $field_collection_item->field_mobile_image[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->mobileImage;
      $field_collection_item->field_mobile_image_alter[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->mobileImageAlt;
      $field_collection_item->field_mobile_manufacturer[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->mobileManufacturer;
      $field_collection_item->field_nid[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->nid;
      $field_collection_item->field_sell_price[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->sellPrice;
      $field_collection_item->field_telco_name[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->telcoName;
      $field_collection_item->field_url[LANGUAGE_NONE][0]['value']
              = $mobile_plan->phone->mobilePlan->url;
      
      $field_collection_item->save();
      return TRUE;
  }
}

/**
 * Page callback to load mobile plans from xml.
 * 
 * @return type 
 */
function load_mobile_plans(){
  $url = "imoneymobileplans.xml";
  $plan_count = comparison_save_product_plans($url);
  return $plan_count . ' items has been saved.';
}

/**
 * Loads data from xml and save as a node in DB.
 * 
 * @param string $url
 * @return int 
 */
function comparison_save_product_plans($url){
  $plan_count = 0;
  if(!$xml = simplexml_load_file($url)){
    watchdog(WATCHDOG_ERROR, t('Failed to open'));
    return $plan_count;
  }
  
  foreach ($xml->mobilePlan as $mobile_plan ){
    $imported = comparison_save_plan($mobile_plan);
    if($imported)
      $plan_count++; 
  }
  return $plan_count;
}